def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file('key.properties')
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.breez.client"
        minSdkVersion 24
        targetSdkVersion 27
        multiDexEnabled true
        versionCode 1
        versionName "0.5-beta"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            //minifyEnabled true
        }
    }

    flavorDimensions "breez"
    productFlavors {
        pos {
            dimension "breez"
            applicationIdSuffix ".pos"
            versionNameSuffix "-pos"
            resValue "string", "app_name", "Breez POS"
        }
        client {
            dimension "breez"
            resValue "string", "app_name", "Breez"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile(name:'breez', ext:'aar')
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.5.+'
    implementation 'com.android.support:exifinterface:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.google.firebase:firebase-invites:16.0.4'
    implementation 'com.google.android.gms:play-services-drive:16.0.0'
    implementation('com.google.api-client:google-api-client-android:1.26.0') {
        exclude group: 'org.apache.httpcomponents'        
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev136-1.25.0') {
        exclude group: 'org.apache.httpcomponents'        
    }
    implementation 'com.felipecsl:gifimageview:2.1.0'
    implementation 'commons-io:commons-io:2.4'    
    implementation ('android.arch.work:work-runtime:1.0.0-alpha10') {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }
    implementation 'com.google.android.gms:play-services-auth:16.0.1'        
}
apply plugin: 'com.google.gms.google-services'
